name: Docker v2

on:
  push:

jobs:
  base:
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    strategy:
      matrix:
        target:
          - builder
          - node_prod_base
          - go_prod_base
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      - name: Build ${{ matrix.target }}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: ./base.Dockerfile
          target: ${{ matrix.target }}
          load: true
          tags: localhost:5000/twir-base:${{ matrix.target }}
#          outputs: type=docker,dest=/tmp/${{ matrix.target }}.tar
          cache-from: type=gha,scope=twir-base:${{ matrix.target }}
          cache-to: type=gha,mode=max,scope=twir-base:${{ matrix.target }}
#      - name: Upload ${{ matrix.target }} artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: ${{ matrix.target }}
#          path: /tmp/${{ matrix.target }}.tar
#          retention-days: 1

  backend:
    runs-on: ubuntu-latest
    needs:
      - base
    strategy:
      matrix:
        target:
          - api
          - bots
          - discord
          - emotes-cacher
          - eval
          - events
          - eventsub
          - integrations
          - language-detector
          - parser
          - scheduler
          - timers
          - tokens
          - websockets
          - ytsr
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

#      - name: Restore base images
#        uses: actions/download-artifact@v3
#        with:
#          path: /tmp
#
#      - name: Load base images
#        run: |
#          docker load --input /tmp/builder/builder.tar &
#          docker load --input /tmp/node_prod_base/node_prod_base.tar &
#          docker load --input /tmp/go_prod_base/go_prod_base.tar &
#          wait
#          docker image ls

      - name: Build ${{ matrix.target }}
        uses: docker/build-push-action@v5
        with:
          context: .
          build-contexts: |
            builder=docker-image://localhost:5000/twir-base:builder
            node_prod_base=docker-image://localhost:5000/twir-base:node_prod_base
            go_prod_base=docker-image://localhost:5000/twir-base:go_prod_base
          push: false
          load: true
          file: ./apps/${{ matrix.target }}/Dockerfile
          tags: twir:${{ matrix.target }}
          cache-from: |
            cache-from: |
            type=gha,scope=twir-base:builder
            type=gha,scope=twir-base:node_prod_base
            type=gha,scope=twir-base:go_prod_base
            type=gha,scope=twir:${{ matrix.target }}
          cache-to: type=gha,mode=max,scope=twir:${{ matrix.target }}
