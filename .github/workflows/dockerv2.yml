name: Docker v2

on:
  push:

jobs:
  base:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - builder
          - node_prod_base
          - go_prod_base
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build ${{ matrix.target }}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          file: ./base.Dockerfile
          target: ${{ matrix.target }}
          tags: twir-base:${{ matrix.target }}
          outputs: type=docker,dest=/tmp/twir-base_${{ matrix.target }}.tar
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Upload ${{ matrix.target }} artifact
        uses: actions/upload-artifact@v3
        with:
          name: twir-base_${{ matrix.target }}
          path: /tmp/twir-base_${{ matrix.target }}.tar
          retention-days: 1

  backend:
    runs-on: ubuntu-latest
    needs:
      - base
    strategy:
      matrix:
        target:
          - api
          - bots
          - discord
          - emotes-cacher
          - eval
          - events
          - eventsub
          - integrations
          - language-detector
          - parser
          - scheduler
          - timers
          - tokens
          - websockets
          - ytsr
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Restore builder image
        uses: actions/download-artifact@v3
        with:
          name: twir-base_builder
          path: /tmp

      - name: Restore node_prod_base image
        uses: actions/download-artifact@v3
        with:
          name: twir-base_node_prod_base
          path: /tmp

      - name: Restore go_prod_base image
        uses: actions/download-artifact@v3
        with:
          name: twir-base_go_prod_base
          path: /tmp

      - name: Load base images
        run: |
          docker load --input /tmp/twir-base_builder.tar
          docker load --input /tmp/twir-base_node_prod_base.tar
          docker load --input /tmp/twir-base_go_prod_base.tar

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build ${{ matrix.target }}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          file: ./apps/${{ matrix.target }}/Dockerfile
          tags: twir:${{ matrix.target }}
          cache-from: type=local,src=${{ env.CACHE_PATH }}
          cache-to: type=local,dest=${{ env.CACHE_PATH }}
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
