name: Docker integrations

on:
  push:
    branches: [main]
    paths:
      - apps/integrations/**
  workflow_dispatch:

jobs:
  docker:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-docker]')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - uses: actions/setup-go@v3
        with:
          go-version: '^1.19.1'
      - name: Install go protoc
        run: go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28

      - name: Install ubuntu deps
        run: sudo apt install protobuf-compiler

      - name: Install Deps
        run: pnpm install
      - name: Build api
        run: pnpm turbo run build --filter=@tsuwari/integrations

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Container Registry
        uses: docker/login-action@v1.14.1
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: ./apps/integrations/Dockerfile
          tags: |
            ${{ secrets.DOCKER_REGISTRY }}/tsuwari/integrations:latest

          # tsuwari/integrations:${{ github.sha }}
