name: Docker v3

on:
  push:
  workflow_dispatch:

#        target:
#          - api
#          - bots
#          - discord
#          - emotes-cacher
#          - eval
#          - events
#          - eventsub
#          - integrations
#          - parser
#          - scheduler
#          - timers
#          - tokens
#          - websockets
#          - ytsr

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        type: ["apps", "frontend"]
        include:
          - type: "apps"
            app: "api"
          - type: "apps"
            app: "bots"
          - type: "apps"
            app: "discord"
          - type: "apps"
            app: "emotes-cacher"
          - type: "apps"
            app: "eval"
          - type: "apps"
            app: "events"
          - type: "apps"
            app: "eventsub"
          - type: "apps"
            app: "integrations"
          - type: "apps"
            app: "parser"
          - type: "apps"
            app: "scheduler"
          - type: "apps"
            app: "timers"
          - type: "apps"
            app: "tokens"
          - type: "apps"
            app: "websockets"
          - type: "apps"
            app: "ytsr"

          - type: "frontend"
            app: "dashboard"
          - type: "frontend"
            app: "landing"
          - type: "frontend"
            app: "overlays"
          - type: "frontend"
            app: "public-page"
    steps:
      - uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install Node.js dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup Golang dependencies
        uses: magnetikonline/action-golang-cache@v5
        with:
          go-version-file: go.work

      - name: Install binaries dependencies
        run: pnpm cli deps -skip-node -skip-go

      - name: Setup turborepo cache
        uses: dtinth/setup-github-actions-caching-for-turbo@v1
      - name: Build libraries
        run: pnpm cli build libs

      - name: Build application
        run: pnpm cli build app ${{ matrix.target }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
#      - name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./${{ matrix.type }}/${{ matrix.target }}/Dockerfile
          push: false
          tags: twir/${{ matrix.target }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

