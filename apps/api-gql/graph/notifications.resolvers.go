package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"fmt"

	"github.com/samber/lo"
	"github.com/twirapp/twir/apps/api-gql/graph/model"
)

// CreateNotification is the resolver for the createNotification field.
func (r *mutationResolver) CreateNotification(ctx context.Context, text string, userID *string) (*model.Notification, error) {
	newNotification := &model.Notification{
		ID:     fmt.Sprintf("%d", len(notifications)+1),
		Text:   text,
		UserID: *userID,
	}

	notifications = append(notifications, newNotification)

	return newNotification, nil
}

// Notifications is the resolver for the notifications field.
func (r *queryResolver) Notifications(ctx context.Context, userID string) ([]*model.Notification, error) {
	filteredNotifcations := lo.Filter(
		notifications, func(n *model.Notification, _ int) bool {
			return n.UserID == userID
		},
	)

	return filteredNotifcations, nil
}

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
var notifications = []*model.Notification{
	{
		ID:     "1",
		UserID: "2",
		Text:   "text",
	},
}
