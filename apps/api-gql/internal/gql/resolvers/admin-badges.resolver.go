package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"fmt"

	"github.com/99designs/gqlgen/graphql"
	"github.com/twirapp/twir/apps/api-gql/internal/gql/gqlmodel"
)

// BadgesDelete is the resolver for the badgesDelete field.
func (r *mutationResolver) BadgesDelete(ctx context.Context, id string) (bool, error) {
	panic(fmt.Errorf("not implemented: BadgesDelete - badgesDelete"))
}

// BadgesUpdate is the resolver for the badgesUpdate field.
func (r *mutationResolver) BadgesUpdate(
	ctx context.Context,
	id string,
	opts gqlmodel.TwirBadgeUpdateOpts,
) (bool, error) {
	panic(fmt.Errorf("not implemented: BadgesUpdate - badgesUpdate"))
}

// BadgesCreate is the resolver for the badgesCreate field.
func (r *mutationResolver) BadgesCreate(
	ctx context.Context,
	name string,
	file *graphql.Upload,
) (bool, error) {
	panic(fmt.Errorf("not implemented: BadgesCreate - badgesCreate"))
}

// BadgesAddUser is the resolver for the badgesAddUser field.
func (r *mutationResolver) BadgesAddUser(ctx context.Context, id string, userID string) (
	bool,
	error,
) {
	panic(fmt.Errorf("not implemented: BadgesAddUser - badgesAddUser"))
}

// BadgesRemoveUser is the resolver for the badgesRemoveUser field.
func (r *mutationResolver) BadgesRemoveUser(ctx context.Context, id string, userID string) (
	bool,
	error,
) {
	panic(fmt.Errorf("not implemented: BadgesRemoveUser - badgesRemoveUser"))
}

// TwirBadges is the resolver for the twirBadges field.
func (r *queryResolver) TwirBadges(ctx context.Context) ([]gqlmodel.AdminBadge, error) {
	panic(fmt.Errorf("not implemented: TwirBadges - twirBadges"))
}
