package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"time"

	"github.com/twirapp/twir/apps/api-gql/internal/gql/gqlmodel"
)

// DashboardStats is the resolver for the dashboardStats field.
func (r *subscriptionResolver) DashboardStats(ctx context.Context) (<-chan *gqlmodel.DashboardStats, error) {
	channel := make(chan *gqlmodel.DashboardStats, 1)

	go func() {
		defer close(channel)

		for {
			select {
			case <-ctx.Done():
				return
			default:
				stats, err := r.getDashboardStats(ctx)
				if err != nil {
					return
				}

				channel <- stats

				time.Sleep(5 * time.Second)
			}
		}
	}()

	return channel, nil
}
