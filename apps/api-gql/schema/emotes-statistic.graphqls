extend type Query {
	emotesStatistics(opts: EmotesStatisticsOpts!): EmotesStatisticResponse! @isAuthenticated
	emotesStatisticEmote(opts: EmotesStatisticEmoteOpts!): [EmoteStatisticUsage!]! @isAuthenticated
}

type EmotesStatisticResponse {
	emotes: [EmotesStatistic!]!
	total: Int!
}

type EmotesStatistic {
	emoteName: String!
	usages: Int!
	lastUsedAt: Time!
	graphicUsages: [EmoteStatisticUsage!]!
}

input EmotesStatisticsOpts {
	search: String
	page: Int
	perPage: Int
	graphicRange: EmoteStatisticRange
}

enum EmoteStatisticRange {
	LAST_DAY
	LAST_WEEK
	LAST_MONTH
	LAST_THREE_MONTH
	LAST_YEAR
}

input EmotesStatisticEmoteOpts {
	emoteName: String!
	range: EmoteStatisticRange!
}

type EmoteStatisticUsage {
	count: Int!
	usedAt: Time!
}
