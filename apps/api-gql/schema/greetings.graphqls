extend type Query {
	greetings: [Greeting!]! @isAuthenticated @hasAccessToSelectedDashboard @hasChannelRolesDashboardPermission(permission: VIEW_GREETINGS)
}

extend type Mutation {
	greetingsCreate(opts: GreetingsCreateInput!): Greeting! @isAuthenticated @hasAccessToSelectedDashboard @hasChannelRolesDashboardPermission(permission: MANAGE_GREETINGS)
	greetingsUpdate(id: String!, opts: GreetingsUpdateInput!): Greeting! @isAuthenticated @hasAccessToSelectedDashboard @hasChannelRolesDashboardPermission(permission: MANAGE_GREETINGS)
	greetingsRemove(id: String!): Boolean! @isAuthenticated @hasAccessToSelectedDashboard @hasChannelRolesDashboardPermission(permission: MANAGE_GREETINGS)
}

type Greeting {
	id: ID!
	userId: String!
	twitchProfile: TwirUserTwitchInfo! @goField(forceResolver: true)
	enabled: Boolean!
	isReply: Boolean!
	text: String!
}

input GreetingsCreateInput {
	enabled: Boolean!
	isReply: Boolean!
	userId: String!
	text: String!
}

input GreetingsUpdateInput {
	enabled: Boolean
	isReply: Boolean
	userId: String
	text: String
}
