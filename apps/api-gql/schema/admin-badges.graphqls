extend type Query {
	"""
	Twir badges
	"""
	twirBadges: [Badge!]!
}

extend type Mutation {
	badgesDelete(id: ID!): Boolean! @isAuthenticated @isAdmin
	badgesUpdate(id: ID!, opts: TwirBadgeUpdateOpts!): Badge! @isAuthenticated @isAdmin
	badgesCreate(opts: TwirBadgeCreateOpts!): Badge! @isAuthenticated @isAdmin
	badgesAddUser(id: ID!, userId: String!): Boolean! @isAuthenticated @isAdmin
	badgesRemoveUser(id: ID!, userId: String!): Boolean! @isAuthenticated @isAdmin
}

type Badge {
	id: ID!
	name: String!
	createdAt: String!
	fileUrl: String!
	enabled: Boolean!
	"""
	IDS of users which has this badge
	"""
	users: [String!]
	ffzSlot: Int!
}

input TwirBadgeUpdateOpts {
	name: String @validate(constraint: "max=200")
	file: Upload
	enabled: Boolean
	ffzSlot: Int @validate(constraint: "max=999999")
}

input TwirBadgeCreateOpts {
	name: String! @validate(constraint: "max=500")
	file: Upload!
	enabled: Boolean
	ffzSlot: Int! @validate(constraint: "max=999999")
}
