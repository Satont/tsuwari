extend type Query {
	notificationsByUser: [Notification!]! @isAuthenticated

	notificationsByAdmin(type: NotificationType!): [Notification!]! @isAuthenticated @isAdmin
}

extend type Mutation {
	createNotification(text: String!, userId: String): Notification! @isAuthenticated @isAdmin
	notificationsUpdate(id: ID!, opts: NotificationUpdateOpts!): Notification! @isAuthenticated @isAdmin
	notificationsDelete(id: ID!): Boolean! @isAuthenticated @isAdmin
}

extend type Subscription {
	"""
	`newNotification` will return a stream of `Notification` objects.
	"""
	newNotification: Notification! @isAuthenticated
}

type Notification {
	id: ID!
	userId: ID
	text: String!
}

enum NotificationType {
	GLOBAL
	USER
}

input NotificationUpdateOpts {
	text: String
}
