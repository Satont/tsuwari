basePath: /
definitions:
  github_com_satont_tsuwari_apps_api_internal_api_v1_bot.connectionDto:
    properties:
      action:
        enum:
        - join
        - part
        type: string
    required:
    - action
    type: object
  github_com_satont_tsuwari_apps_api_internal_api_v1_commands.commandDto:
    properties:
      aliases:
        items:
          type: string
        maxItems: 20
        type: array
      cooldown:
        maximum: 86400
        type: integer
      cooldownType:
        type: string
      description:
        maxLength: 500
        type: string
      enabled:
        type: boolean
      id:
        type: string
      isReply:
        type: boolean
      keepResponsesOrder:
        type: boolean
      name:
        maxLength: 100
        minLength: 1
        type: string
      permission:
        type: string
      responses:
        items:
          $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_api_v1_commands.responsesDto'
        type: array
      visible:
        type: boolean
    required:
    - aliases
    - cooldownType
    - enabled
    - isReply
    - keepResponsesOrder
    - name
    - permission
    - visible
    type: object
  github_com_satont_tsuwari_apps_api_internal_api_v1_commands.commandPatchDto:
    properties:
      enabled:
        type: boolean
    required:
    - enabled
    type: object
  github_com_satont_tsuwari_apps_api_internal_api_v1_commands.responsesDto:
    properties:
      order:
        minimum: 0
        type: integer
      text:
        maxLength: 500
        minLength: 1
        type: string
    required:
    - text
    type: object
  github_com_satont_tsuwari_apps_api_internal_api_v1_greetings.Greeting:
    properties:
      avatar:
        type: string
      channelId:
        type: string
      enabled:
        type: boolean
      id:
        type: string
      isReply:
        type: boolean
      processed:
        type: boolean
      text:
        type: string
      userId:
        type: string
      userName:
        type: string
    type: object
  github_com_satont_tsuwari_apps_api_internal_api_v1_greetings.greetingsDto:
    properties:
      enabled:
        type: boolean
      id:
        type: string
      isReply:
        type: boolean
      text:
        maxLength: 400
        type: string
      userName:
        minLength: 1
        type: string
    required:
    - enabled
    - isReply
    - userName
    type: object
  github_com_satont_tsuwari_apps_api_internal_api_v1_greetings.greetingsPatchDto:
    properties:
      enabled:
        type: boolean
    type: object
  github_com_satont_tsuwari_apps_api_internal_api_v1_integrations_donationalerts.tokenDto:
    properties:
      code:
        type: string
    required:
    - code
    type: object
  github_com_satont_tsuwari_apps_api_internal_api_v1_integrations_faceit.tokenDto:
    properties:
      code:
        type: string
    required:
    - code
    type: object
  github_com_satont_tsuwari_apps_api_internal_api_v1_integrations_lastfm.LastfmProfile:
    properties:
      albumCount:
        type: string
      image:
        type: string
      name:
        type: string
      playCount:
        type: string
      trackCount:
        type: string
    type: object
  github_com_satont_tsuwari_apps_api_internal_api_v1_integrations_lastfm.lastfmDto:
    properties:
      code:
        type: string
    required:
    - code
    type: object
  github_com_satont_tsuwari_apps_api_internal_api_v1_integrations_spotify.tokenDto:
    properties:
      code:
        type: string
    required:
    - code
    type: object
  github_com_satont_tsuwari_apps_api_internal_api_v1_integrations_streamlabs.tokenDto:
    properties:
      code:
        type: string
    required:
    - code
    type: object
  github_com_satont_tsuwari_apps_api_internal_api_v1_integrations_vk.profile:
    properties:
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      photo_max_orig:
        type: string
    type: object
  github_com_satont_tsuwari_apps_api_internal_api_v1_integrations_vk.vkDto:
    properties:
      code:
        type: string
    required:
    - code
    type: object
  github_com_satont_tsuwari_apps_api_internal_api_v1_keywords.keywordDto:
    properties:
      cooldown:
        maximum: 86400
        minimum: 5
        type: integer
      enabled:
        type: boolean
      isRegular:
        type: boolean
      isReply:
        type: boolean
      response:
        maxLength: 400
        type: string
      text:
        maxLength: 100
        type: string
      usages:
        type: integer
    required:
    - enabled
    - isRegular
    - isReply
    - text
    - usages
    type: object
  github_com_satont_tsuwari_apps_api_internal_api_v1_keywords.keywordPatchDto:
    properties:
      enabled:
        type: boolean
    required:
    - enabled
    type: object
  github_com_satont_tsuwari_apps_api_internal_api_v1_moderation.moderationDto:
    properties:
      items:
        items:
          $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_api_v1_moderation.moderationItemDto'
        type: array
    required:
    - items
    type: object
  github_com_satont_tsuwari_apps_api_internal_api_v1_moderation.moderationItemDto:
    properties:
      banMessage:
        type: string
      banTime:
        type: integer
      blackListSentences:
        items:
          type: string
        type: array
      checkClips:
        type: boolean
      enabled:
        type: boolean
      id:
        type: string
      maxPercentage:
        type: integer
      subscribers:
        type: boolean
      triggerLength:
        type: integer
      type:
        type: string
      vips:
        type: boolean
      warningMessage:
        type: string
    required:
    - banTime
    - enabled
    - id
    - maxPercentage
    - subscribers
    - triggerLength
    - type
    - vips
    type: object
  github_com_satont_tsuwari_apps_api_internal_api_v1_settings_dashboardAccess.Entity:
    properties:
      channelId:
        type: string
      id:
        type: string
      twitchUser:
        $ref: '#/definitions/helix.User'
      userId:
        type: string
    type: object
  github_com_satont_tsuwari_apps_api_internal_api_v1_settings_dashboardAccess.addUserDto:
    properties:
      userName:
        type: string
    required:
    - userName
    type: object
  github_com_satont_tsuwari_apps_api_internal_api_v1_stats.statsItem:
    properties:
      count:
        type: integer
      name:
        enum:
        - users
        - channels
        - commands
        - messages
        type: string
    type: object
  github_com_satont_tsuwari_apps_api_internal_api_v1_timers.responseDto:
    properties:
      isAnnounce:
        type: boolean
      text:
        maxLength: 400
        type: string
    required:
    - isAnnounce
    - text
    type: object
  github_com_satont_tsuwari_apps_api_internal_api_v1_timers.timerDto:
    properties:
      enabled:
        type: boolean
      messageInterval:
        maximum: 10000
        minimum: 0
        type: integer
      name:
        maxLength: 510
        type: string
      responses:
        items:
          $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_api_v1_timers.responseDto'
        type: array
      timeInterval:
        maximum: 120
        minimum: 1
        type: integer
    required:
    - enabled
    - name
    - responses
    type: object
  github_com_satont_tsuwari_apps_api_internal_api_v1_timers.timerPatchDto:
    properties:
      enabled:
        type: boolean
    required:
    - enabled
    type: object
  github_com_satont_tsuwari_apps_api_internal_api_v1_variables.variableDto:
    properties:
      description:
        type: string
      evalValue:
        type: string
      name:
        type: string
      response:
        type: string
      type:
        enum:
        - SCRIPT
        - TEXT
        type: string
    required:
    - name
    - type
    type: object
  github_com_satont_tsuwari_apps_api_internal_types.DOCApiBadRequest:
    properties:
      messages:
        type: string
    type: object
  github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError:
    properties:
      messages:
        items:
          type: string
        type: array
    type: object
  github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError:
    properties:
      messages:
        items:
          type: string
        type: array
    type: object
  helix.User:
    properties:
      broadcaster_type:
        type: string
      created_at:
        type: string
      description:
        type: string
      display_name:
        type: string
      email:
        type: string
      id:
        type: string
      login:
        type: string
      offline_image_url:
        type: string
      profile_image_url:
        type: string
      type:
        type: string
      view_count:
        type: integer
    type: object
  internal_api_v1_bot.connectionDto:
    properties:
      action:
        enum:
        - join
        - part
        type: string
    required:
    - action
    type: object
  internal_api_v1_commands.commandDto:
    properties:
      aliases:
        items:
          type: string
        maxItems: 20
        type: array
      cooldown:
        maximum: 86400
        type: integer
      cooldownType:
        type: string
      description:
        maxLength: 500
        type: string
      enabled:
        type: boolean
      id:
        type: string
      isReply:
        type: boolean
      keepResponsesOrder:
        type: boolean
      name:
        maxLength: 100
        minLength: 1
        type: string
      permission:
        type: string
      responses:
        items:
          $ref: '#/definitions/internal_api_v1_commands.responsesDto'
        type: array
      visible:
        type: boolean
    required:
    - aliases
    - cooldownType
    - enabled
    - isReply
    - keepResponsesOrder
    - name
    - permission
    - visible
    type: object
  internal_api_v1_commands.commandPatchDto:
    properties:
      enabled:
        type: boolean
    required:
    - enabled
    type: object
  internal_api_v1_commands.responsesDto:
    properties:
      order:
        minimum: 0
        type: integer
      text:
        maxLength: 500
        minLength: 1
        type: string
    required:
    - text
    type: object
  internal_api_v1_greetings.Greeting:
    properties:
      avatar:
        type: string
      channelId:
        type: string
      enabled:
        type: boolean
      id:
        type: string
      isReply:
        type: boolean
      processed:
        type: boolean
      text:
        type: string
      userId:
        type: string
      userName:
        type: string
    type: object
  internal_api_v1_greetings.greetingsDto:
    properties:
      enabled:
        type: boolean
      id:
        type: string
      isReply:
        type: boolean
      text:
        maxLength: 400
        type: string
      userName:
        minLength: 1
        type: string
    required:
    - enabled
    - isReply
    - userName
    type: object
  internal_api_v1_greetings.greetingsPatchDto:
    properties:
      enabled:
        type: boolean
    type: object
  internal_api_v1_integrations_donationalerts.tokenDto:
    properties:
      code:
        type: string
    required:
    - code
    type: object
  internal_api_v1_integrations_faceit.tokenDto:
    properties:
      code:
        type: string
    required:
    - code
    type: object
  internal_api_v1_integrations_lastfm.LastfmProfile:
    properties:
      albumCount:
        type: string
      image:
        type: string
      name:
        type: string
      playCount:
        type: string
      trackCount:
        type: string
    type: object
  internal_api_v1_integrations_lastfm.lastfmDto:
    properties:
      code:
        type: string
    required:
    - code
    type: object
  internal_api_v1_integrations_spotify.tokenDto:
    properties:
      code:
        type: string
    required:
    - code
    type: object
  internal_api_v1_integrations_streamlabs.tokenDto:
    properties:
      code:
        type: string
    required:
    - code
    type: object
  internal_api_v1_integrations_vk.profile:
    properties:
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      photo_max_orig:
        type: string
    type: object
  internal_api_v1_integrations_vk.vkDto:
    properties:
      code:
        type: string
    required:
    - code
    type: object
  internal_api_v1_keywords.keywordDto:
    properties:
      cooldown:
        maximum: 86400
        minimum: 5
        type: integer
      enabled:
        type: boolean
      isRegular:
        type: boolean
      isReply:
        type: boolean
      response:
        maxLength: 400
        type: string
      text:
        maxLength: 100
        type: string
      usages:
        type: integer
    required:
    - enabled
    - isRegular
    - isReply
    - text
    - usages
    type: object
  internal_api_v1_keywords.keywordPatchDto:
    properties:
      enabled:
        type: boolean
    required:
    - enabled
    type: object
  internal_api_v1_moderation.moderationDto:
    properties:
      items:
        items:
          $ref: '#/definitions/internal_api_v1_moderation.moderationItemDto'
        type: array
    required:
    - items
    type: object
  internal_api_v1_moderation.moderationItemDto:
    properties:
      banMessage:
        type: string
      banTime:
        type: integer
      blackListSentences:
        items:
          type: string
        type: array
      checkClips:
        type: boolean
      enabled:
        type: boolean
      id:
        type: string
      maxPercentage:
        type: integer
      subscribers:
        type: boolean
      triggerLength:
        type: integer
      type:
        type: string
      vips:
        type: boolean
      warningMessage:
        type: string
    required:
    - banTime
    - enabled
    - id
    - maxPercentage
    - subscribers
    - triggerLength
    - type
    - vips
    type: object
  internal_api_v1_settings_dashboardAccess.Entity:
    properties:
      channelId:
        type: string
      id:
        type: string
      twitchUser:
        $ref: '#/definitions/helix.User'
      userId:
        type: string
    type: object
  internal_api_v1_settings_dashboardAccess.addUserDto:
    properties:
      userName:
        type: string
    required:
    - userName
    type: object
  internal_api_v1_stats.statsItem:
    properties:
      count:
        type: integer
      name:
        enum:
        - users
        - channels
        - commands
        - messages
        type: string
    type: object
  internal_api_v1_timers.responseDto:
    properties:
      isAnnounce:
        type: boolean
      text:
        maxLength: 400
        type: string
    required:
    - isAnnounce
    - text
    type: object
  internal_api_v1_timers.timerDto:
    properties:
      enabled:
        type: boolean
      messageInterval:
        maximum: 10000
        minimum: 0
        type: integer
      name:
        maxLength: 510
        type: string
      responses:
        items:
          $ref: '#/definitions/internal_api_v1_timers.responseDto'
        type: array
      timeInterval:
        maximum: 120
        minimum: 1
        type: integer
    required:
    - enabled
    - name
    - responses
    type: object
  internal_api_v1_timers.timerPatchDto:
    properties:
      enabled:
        type: boolean
    required:
    - enabled
    type: object
  internal_api_v1_variables.variableDto:
    properties:
      description:
        type: string
      evalValue:
        type: string
      name:
        type: string
      response:
        type: string
      type:
        enum:
        - SCRIPT
        - TEXT
        type: string
    required:
    - name
    - type
    type: object
  model.Channels:
    properties:
      botId:
        type: string
      id:
        type: string
      isBanned:
        type: boolean
      isEnabled:
        type: boolean
      isTwitchBanned:
        type: boolean
    type: object
  model.ChannelsCommands:
    properties:
      aliases:
        items:
          type: string
        type: array
      channelId:
        type: string
      cooldown:
        type: integer
      cooldownType:
        type: string
      default:
        type: boolean
      defaultName:
        type: string
      description:
        type: string
      enabled:
        type: boolean
      id:
        type: string
      isReply:
        type: boolean
      keepResponsesOrder:
        type: boolean
      module:
        type: string
      name:
        type: string
      permission:
        type: string
      responses:
        items:
          $ref: '#/definitions/model.ChannelsCommandsResponses'
        type: array
      visible:
        type: boolean
    type: object
  model.ChannelsCommandsResponses:
    properties:
      commandId:
        type: string
      id:
        type: string
      order:
        type: integer
      text:
        type: string
    type: object
  model.ChannelsCustomvars:
    properties:
      channelId:
        description: '[ 6] channelId                                      TEXT                 null:
          false  primary: false  isArray: false  auto: false  col: TEXT            len:
          -1      default: []'
        type: string
      description:
        type: string
      evalValue:
        description: '[ 4] evalValue                                      TEXT                 null:
          true   primary: false  isArray: false  auto: false  col: TEXT            len:
          -1      default: []'
        type: string
      id:
        type: string
      name:
        type: string
      response:
        description: '[ 5] response                                       TEXT                 null:
          true   primary: false  isArray: false  auto: false  col: TEXT            len:
          -1      default: []'
        type: string
      type:
        description: '[ 3] type                                           USER_DEFINED         null:
          false  primary: false  isArray: false  auto: false  col: USER_DEFINED    len:
          -1      default: []'
        type: string
    type: object
  model.ChannelsIntegrations:
    properties:
      accessToken:
        type: string
      apiKey:
        type: string
      channelId:
        type: string
      clientId:
        type: string
      clientSecret:
        type: string
      data:
        $ref: '#/definitions/model.ChannelsIntegrationsData'
      enabled:
        type: boolean
      id:
        type: string
      integrationId:
        type: string
      refreshToken:
        type: string
    type: object
  model.ChannelsIntegrationsData:
    properties:
      avatar:
        type: string
      code:
        type: string
      game:
        type: string
      name:
        type: string
      userId:
        type: string
      username:
        type: string
    type: object
  model.ChannelsKeywords:
    properties:
      channelId:
        type: string
      cooldown:
        type: integer
      cooldownExpireAt:
        type: string
      enabled:
        type: boolean
      id:
        type: string
      isRegular:
        type: boolean
      isReply:
        type: boolean
      response:
        type: string
      text:
        type: string
      usages:
        type: integer
    type: object
  model.ChannelsModerationSettings:
    properties:
      banMessage:
        type: string
      banTime:
        type: integer
      blackListSentences:
        items:
          type: string
        type: array
      channelId:
        type: string
      checkClips:
        type: boolean
      enabled:
        type: boolean
      id:
        type: string
      maxPercentage:
        type: integer
      subscribers:
        type: boolean
      triggerLength:
        type: integer
      type:
        type: string
      vips:
        type: boolean
      warningMessage:
        type: string
    type: object
  model.ChannelsStreams:
    properties:
      channel:
        $ref: '#/definitions/model.Channels'
      communityIds:
        items:
          type: string
        type: array
      gameId:
        type: string
      gameName:
        type: string
      id:
        type: string
      isMature:
        type: boolean
      language:
        type: string
      parsedMessages:
        type: integer
      startedAt:
        type: string
      tagIds:
        items:
          type: string
        type: array
      tags:
        items:
          type: string
        type: array
      thumbnailUrl:
        type: string
      title:
        type: string
      type:
        type: string
      userId:
        type: string
      userLogin:
        type: string
      userName:
        type: string
      viewerCount:
        type: integer
    type: object
  model.ChannelsTimers:
    properties:
      channelId:
        type: string
      enabled:
        type: boolean
      id:
        type: string
      lastTriggerMessageNumber:
        type: integer
      messageInterval:
        type: integer
      name:
        type: string
      responses:
        items:
          $ref: '#/definitions/model.ChannelsTimersResponses'
        type: array
      timeInterval:
        type: integer
    type: object
  model.ChannelsTimersResponses:
    properties:
      isAnnounce:
        type: boolean
      text:
        type: string
    type: object
  parser.GetVariablesResponse_Variable:
    properties:
      description:
        type: string
      example:
        type: string
      name:
        type: string
      visible:
        type: boolean
    type: object
  spotify.SpotifyProfile:
    properties:
      country:
        type: string
      display_name:
        type: string
      email:
        type: string
      explicit_content:
        properties:
          filter_enabled:
            type: boolean
          filter_locked:
            type: boolean
        type: object
      external_urls:
        properties:
          spotify:
            type: string
        type: object
      followers:
        properties:
          href:
            type: string
          total:
            type: integer
        type: object
      href:
        type: string
      id:
        type: string
      images:
        items:
          properties:
            height:
              type: integer
            url:
              type: string
            width:
              type: integer
          type: object
        type: array
      product:
        type: string
      type:
        type: string
      uri:
        type: string
    type: object
host: localhost:3002
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: This is a sample swagger for Fiber
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fiber Example API
  version: "1.0"
paths:
  /v1/channels/{channelId}/bot/checkmod:
    get:
      consumes:
      - application/json
      parameters:
      - description: ChannelId
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Check does bot moderator on the channel
      tags:
      - Bot
  /v1/channels/{channelId}/bot/connection:
    patch:
      consumes:
      - application/json
      parameters:
      - description: ChannelId
        in: path
        name: channelId
        required: true
        type: string
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_api_v1_bot.connectionDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Check does bot moderator on the channel
      tags:
      - Bot
  /v1/channels/{channelId}/commands:
    get:
      consumes:
      - application/json
      parameters:
      - description: ChannelId
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ChannelsCommands'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Get channel commands list
      tags:
      - Commands
    post:
      consumes:
      - application/json
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_api_v1_commands.commandDto'
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChannelsCommands'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Create command
      tags:
      - Commands
  /v1/channels/{channelId}/commands/{commandId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      - description: ID of command
        in: path
        name: commandId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChannelsCommands'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Delete command
      tags:
      - Commands
    patch:
      consumes:
      - application/json
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_api_v1_commands.commandPatchDto'
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      - description: ID of command
        in: path
        name: commandId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChannelsCommands'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Partialy update command
      tags:
      - Commands
    put:
      consumes:
      - application/json
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_api_v1_commands.commandDto'
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      - description: ID of command
        in: path
        name: commandId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChannelsCommands'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Update command
      tags:
      - Commands
  /v1/channels/{channelId}/greetings:
    get:
      consumes:
      - application/json
      parameters:
      - description: ChannelId
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/internal_api_v1_greetings.Greeting'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Get channel greeting list
      tags:
      - Greetings
    post:
      consumes:
      - application/json
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/internal_api_v1_greetings.greetingsDto'
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_api_v1_greetings.Greeting'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Create greeting
      tags:
      - Greetings
  /v1/channels/{channelId}/greetings/{greetingId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      - description: ID of greeting
        in: path
        name: greetingId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "404":
          description: Not Found
      security:
      - ApiKeyAuth: []
      summary: Delete greeting
      tags:
      - Greetings
    put:
      consumes:
      - application/json
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/internal_api_v1_greetings.greetingsPatchDto'
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      - description: ID of greeting
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_api_v1_greetings.Greeting'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Update greeting
      tags:
      - Greetings
  /v1/channels/{channelId}/integrations/donationalerts:
    get:
      consumes:
      - application/json
      parameters:
      - description: ChannelId
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChannelsIntegrationsData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Get DonationAlerts integration
      tags:
      - Integrations|DonationAlerts
    post:
      consumes:
      - application/json
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_api_v1_integrations_donationalerts.tokenDto'
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Update auth of DonationAlerts
      tags:
      - Integrations|DonationAlerts
  /v1/channels/{channelId}/integrations/donationalerts/auth:
    get:
      consumes:
      - application/json
      parameters:
      - description: ChannelId
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Auth link
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Get DonationAlerts auth link
      tags:
      - Integrations|DonationAlerts
  /v1/channels/{channelId}/integrations/donationalerts/logout:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiBadRequest'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Logout
      tags:
      - Integrations|DonationAlerts
  /v1/channels/{channelId}/integrations/faceit:
    get:
      consumes:
      - application/json
      parameters:
      - description: ChannelId
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChannelsIntegrationsData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Get Faceit profile
      tags:
      - Integrations|Faceit
    post:
      consumes:
      - application/json
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_api_v1_integrations_faceit.tokenDto'
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Authorize Faceit
      tags:
      - Integrations|Faceit
  /v1/channels/{channelId}/integrations/faceit/auth:
    get:
      consumes:
      - application/json
      parameters:
      - description: ChannelId
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Auth link
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Get Faceit auth link
      tags:
      - Integrations|Faceit
  /v1/channels/{channelId}/integrations/faceit/logout:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiBadRequest'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Logout
      tags:
      - Integrations|Faceit
  /v1/channels/{channelId}/integrations/lastfm:
    get:
      consumes:
      - application/json
      parameters:
      - description: ChannelId
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_api_v1_integrations_lastfm.LastfmProfile'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Get LastFm profile
      tags:
      - Integrations|Lastfm
    post:
      consumes:
      - application/json
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_api_v1_integrations_lastfm.lastfmDto'
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChannelsIntegrations'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Update LastFM
      tags:
      - Integrations|Lastfm
  /v1/channels/{channelId}/integrations/lastfm/auth:
    get:
      consumes:
      - application/json
      parameters:
      - description: ChannelId
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Get LastFm auth link
      tags:
      - Integrations|Lastfm
  /v1/channels/{channelId}/integrations/lastfm/logout:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiBadRequest'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Logout
      tags:
      - Integrations|Lastfm
  /v1/channels/{channelId}/integrations/spotify:
    get:
      consumes:
      - application/json
      parameters:
      - description: ChannelId
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/spotify.SpotifyProfile'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Get Spotify profile
      tags:
      - Integrations|Spotify
    post:
      consumes:
      - application/json
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/internal_api_v1_integrations_spotify.tokenDto'
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Authorize Spotify
      tags:
      - Integrations|Spotify
  /v1/channels/{channelId}/integrations/spotify/auth:
    get:
      consumes:
      - application/json
      parameters:
      - description: ChannelId
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Auth link
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Get Spotify auth link
      tags:
      - Integrations|Spotify
  /v1/channels/{channelId}/integrations/spotify/logout:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiBadRequest'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Logout
      tags:
      - Integrations|Spotify
  /v1/channels/{channelId}/integrations/streamlabs:
    get:
      consumes:
      - application/json
      parameters:
      - description: ChannelId
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChannelsIntegrations'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Get Streamlabs integration
      tags:
      - Integrations|Streamlabs
    post:
      consumes:
      - application/json
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/internal_api_v1_integrations_streamlabs.tokenDto'
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Update auth of Streamlabs
      tags:
      - Integrations|Streamlabs
  /v1/channels/{channelId}/integrations/streamlabs/auth:
    get:
      consumes:
      - application/json
      parameters:
      - description: ChannelId
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Auth link
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Get DonationAlerts auth link
      tags:
      - Integrations|Streamlabs
  /v1/channels/{channelId}/integrations/streamlabs/logout:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Logout
      tags:
      - Integrations|Streamlabs
  /v1/channels/{channelId}/integrations/vk:
    get:
      consumes:
      - application/json
      parameters:
      - description: ChannelId
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_api_v1_integrations_vk.profile'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Get VK profile
      tags:
      - Integrations|VK
    post:
      consumes:
      - application/json
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_api_v1_integrations_vk.vkDto'
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Login via vk
      tags:
      - Integrations|VK
  /v1/channels/{channelId}/integrations/vk/auth:
    get:
      consumes:
      - application/json
      parameters:
      - description: ChannelId
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChannelsIntegrations'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Get VK auth link
      tags:
      - Integrations|VK
  /v1/channels/{channelId}/integrations/vk/logout:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Logout
      tags:
      - Integrations|VK
  /v1/channels/{channelId}/keywords:
    get:
      consumes:
      - application/json
      parameters:
      - description: ChannelId
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ChannelsKeywords'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Get channel keywords list
      tags:
      - Keywords
    post:
      consumes:
      - application/json
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_api_v1_keywords.keywordDto'
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChannelsKeywords'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Create keyword
      tags:
      - Keywords
  /v1/channels/{channelId}/keywords/{keywordId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      - description: ID of keyword
        in: path
        name: keywordId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChannelsKeywords'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Delete keyword
      tags:
      - Keywords
    patch:
      consumes:
      - application/json
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_api_v1_keywords.keywordPatchDto'
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      - description: ID of keyword
        in: path
        name: keywordId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChannelsKeywords'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Partially update keyword
      tags:
      - Commands
    put:
      consumes:
      - application/json
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_api_v1_keywords.keywordDto'
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      - description: ID of keyword
        in: path
        name: keywordId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChannelsKeywords'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Update keyword
      tags:
      - Keywords
  /v1/channels/{channelId}/moderation:
    get:
      consumes:
      - application/json
      parameters:
      - description: ChannelId
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ChannelsModerationSettings'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Get moderation settings
      tags:
      - Moderation
    post:
      consumes:
      - application/json
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/internal_api_v1_moderation.moderationDto'
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ChannelsModerationSettings'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Create command
      tags:
      - Moderation
  /v1/channels/{channelId}/settings/dashboard-access:
    get:
      consumes:
      - application/json
      parameters:
      - description: ChannelId
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_api_v1_settings_dashboardAccess.Entity'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Get channel dashboard access list
      tags:
      - Dashboard Access
    post:
      consumes:
      - application/json
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_api_v1_settings_dashboardAccess.addUserDto'
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_api_v1_settings_dashboardAccess.Entity'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Add user to dashboard access list
      tags:
      - Dashboard Access
  /v1/channels/{channelId}/streams:
    get:
      parameters:
      - description: ChannelId
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChannelsStreams'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Get channel stream
      tags:
      - Streams
  /v1/channels/{channelId}/timers:
    get:
      consumes:
      - application/json
      parameters:
      - description: ChannelId
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ChannelsTimers'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Get channel timers list
      tags:
      - Timers
    post:
      consumes:
      - application/json
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/internal_api_v1_timers.timerDto'
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChannelsTimers'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Create timer
      tags:
      - Timers
  /v1/channels/{channelId}/timers/{timerId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      - description: ID of timer
        in: path
        name: timerId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Delete timer
      tags:
      - Timers
    patch:
      consumes:
      - application/json
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/internal_api_v1_timers.timerPatchDto'
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      - description: ID of timer
        in: path
        name: timerId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChannelsTimers'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Partially update timer
      tags:
      - Timers
    put:
      consumes:
      - application/json
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/internal_api_v1_timers.timerDto'
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      - description: ID of timer
        in: path
        name: timerId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChannelsTimers'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Update timer
      tags:
      - Timers
  /v1/channels/{channelId}/variables:
    get:
      consumes:
      - application/json
      parameters:
      - description: ChannelId
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ChannelsCustomvars'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Get channel variables list
      tags:
      - Variables
    post:
      consumes:
      - application/json
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/internal_api_v1_variables.variableDto'
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChannelsCustomvars'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Create variable
      tags:
      - Variables
  /v1/channels/{channelId}/variables/{variableId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      - description: ID of variable
        in: path
        name: variableId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChannelsCustomvars'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Delete variable
      tags:
      - Variables
    put:
      consumes:
      - application/json
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/internal_api_v1_variables.variableDto'
      - description: ID of channel
        in: path
        name: channelId
        required: true
        type: string
      - description: ID of variable
        in: path
        name: variableId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChannelsCustomvars'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiValidationError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Update variable
      tags:
      - Variables
  /v1/channels/{channelId}/variables/builtin:
    get:
      consumes:
      - application/json
      parameters:
      - description: ChannelId
        in: path
        name: channelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/parser.GetVariablesResponse_Variable'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Get built-in variables
      tags:
      - Variables
  /v1/stats:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_api_v1_stats.statsItem'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_satont_tsuwari_apps_api_internal_types.DOCApiInternalError'
      security:
      - ApiKeyAuth: []
      summary: Get some bot statistic
      tags:
      - Stats
securityDefinitions:
  ApiKeyAuth:
    description: '"apiKey" from /v1/profile response'
    in: header
    name: api-key
    type: apiKey
swagger: "2.0"
