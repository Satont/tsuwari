syntax = "proto3";
option go_package = "github.com/twirapp/twir/libs/grpc/events";
package events;
import "google/protobuf/empty.proto";

service Events {
	rpc Follow(FollowMessage) returns (google.protobuf.Empty) {}
	rpc Subscribe(SubscribeMessage) returns (google.protobuf.Empty) {}
	rpc SubGift(SubGiftMessage) returns (google.protobuf.Empty) {}
	rpc ReSubscribe(ReSubscribeMessage) returns (google.protobuf.Empty) {}
	rpc RedemptionCreated(RedemptionCreatedMessage) returns (google.protobuf.Empty) {}
	rpc CommandUsed(CommandUsedMessage) returns (google.protobuf.Empty) {}
	rpc FirstUserMessage(FirstUserMessageMessage) returns (google.protobuf.Empty) {}
	rpc StreamFirstUserJoin(StreamFirstUserJoinMessage) returns (google.protobuf.Empty) {}
	rpc Raided(RaidedMessage) returns (google.protobuf.Empty) {}
	rpc TitleOrCategoryChanged(TitleOrCategoryChangedMessage) returns (google.protobuf.Empty) {}
	rpc StreamOnline(StreamOnlineMessage) returns (google.protobuf.Empty) {}
	rpc StreamOffline(StreamOfflineMessage) returns (google.protobuf.Empty) {}
	rpc ChatClear(ChatClearMessage) returns (google.protobuf.Empty) {}
	rpc Donate(DonateMessage) returns (google.protobuf.Empty) {}
	rpc KeywordMatched(KeywordMatchedMessage) returns (google.protobuf.Empty) {}
	rpc GreetingSended(GreetingSendedMessage) returns (google.protobuf.Empty) {}
	rpc PollBegin(PollBeginMessage) returns (google.protobuf.Empty) {}
	rpc PollProgress(PollProgressMessage) returns (google.protobuf.Empty) {}
	rpc PollEnd(PollEndMessage) returns (google.protobuf.Empty) {}
	rpc PredictionBegin(PredictionBeginMessage) returns (google.protobuf.Empty) {}
	rpc PredictionProgress(PredictionProgressMessage) returns (google.protobuf.Empty) {}
	rpc PredictionLock(PredictionLockMessage) returns (google.protobuf.Empty) {}
	rpc PredictionEnd(PredictionEndMessage) returns (google.protobuf.Empty) {}
	rpc ChannelBan(ChannelBanMessage) returns (google.protobuf.Empty) {}
}

message BaseInfo {
	string channelId = 1;
}

message FollowMessage {
	BaseInfo baseInfo = 1;
	string userName = 2;
	string userDisplayName = 3;
	string userId = 4;
}

message SubscribeMessage {
	BaseInfo baseInfo = 1;

	string userName = 2;
	string userDisplayName = 3;
	string level = 4;
	string userId = 5;
}

message SubGiftMessage {
	BaseInfo baseInfo = 1;

	string senderUserName = 2;
	string senderDisplayName = 3;
	string targetUserName = 4;
	string targetDisplayName = 5;
	string level = 6;
	string senderUserId = 7;
}

message ReSubscribeMessage {
	BaseInfo baseInfo = 1;

	string userName = 2;
	string userDisplayName = 3;
	int64 months = 4;
	int64 streak = 5;
	bool isPrime = 6;
	string message = 7;
	string level = 8;
	string userId = 9;
}

message RedemptionCreatedMessage {
	BaseInfo baseInfo = 1;

	string userName = 2;
	string userDisplayName = 3;
	string id = 4;
	string rewardName = 5;
	string rewardCost = 6;
	optional string input = 7;
	string userId = 8;
}

message CommandUsedMessage {
	BaseInfo baseInfo = 1;

	string commandId = 2;
	string commandName = 3;
	string userName = 4;
	string userDisplayName = 5;
	string commandInput = 6;
	string userId = 7;
	bool is_default = 8;
	string default_command_name = 9;
}

message FirstUserMessageMessage {
	BaseInfo baseInfo = 1;

	string userId = 2;
	string userName = 3;
	string userDisplayName = 4;
}

message RaidedMessage {
	BaseInfo baseInfo = 1;

	string userName = 2;
	string userDisplayName = 3;
	int64 viewers = 4;
	string userId = 5;
}

message TitleOrCategoryChangedMessage {
	BaseInfo baseInfo = 1;

	string oldTitle = 2;
	string newTitle = 3;
	string oldCategory = 4;
	string newCategory = 5;
}

message StreamOnlineMessage {
	BaseInfo baseInfo = 1;

	string title = 2;
	string category = 3;
}

message StreamOfflineMessage {
	BaseInfo baseInfo = 1;
}

message ChatClearMessage {
	BaseInfo baseInfo = 1;
}

message DonateMessage {
	BaseInfo baseInfo = 1;

	string userName = 2;
	string amount = 3;
	string currency = 4;
	string message = 5;
}

message KeywordMatchedMessage {
	BaseInfo baseInfo = 1;

	string keywordId = 2;
	string keywordName = 3;
	string keywordResponse = 4;
	string userId = 5;
	string userName = 6;
	string userDisplayName = 7;
}

message GreetingSendedMessage {
	BaseInfo baseInfo = 1;

	string userId = 2;
	string userName = 3;
	string userDisplayName = 4;
	string greetingText = 5;
}

message PollInfo {
	message Choice {
		string id = 1;
		string title = 2;
		uint64 bitsVotes = 3;
		uint64 channelsPointsVotes = 4;
		uint64 votes = 5;
	}

	message BitsVotes {
		bool enabled = 1;
		uint64 amountPerVote = 2;
	}

	message ChannelPointsVotes {
		bool enabled = 1;
		uint64 amountPerVote = 2;
	}

	string title = 1;
	repeated Choice choices = 2;
	BitsVotes bitsVoting = 3;
	ChannelPointsVotes channelsPointsVoting = 4;
}

message PollBeginMessage {
	BaseInfo baseInfo = 1;

	string userName = 2;
	string userDisplayName = 3;
	PollInfo info = 4;
}

message PollProgressMessage {
	BaseInfo baseInfo = 1;

	string userName = 2;
	string userDisplayName = 3;
	PollInfo info = 4;
}

message PollEndMessage {
	BaseInfo baseInfo = 1;

	string userName = 2;
	string userDisplayName = 3;
	PollInfo info = 4;
}

message PredictionInfo {
	message OutCome {
		message TopPredictor {
			string userName = 1;
			string userDisplayName = 2;
			string userId = 3;
			uint64 pointsUsed = 4;
			optional uint64 pointsWin = 6;
		}

		string id = 1;
		string title = 2;
		string color = 3;
		uint64 users = 4;
		uint64 channelPoints = 5;
		repeated TopPredictor topPredictors = 6;
	}

	string title = 1;
	repeated OutCome outcomes = 2;
}

message PredictionBeginMessage {
	BaseInfo baseInfo = 1;

	string userName = 2;
	string userDisplayName = 3;
	PredictionInfo info = 4;
}

message PredictionProgressMessage {
	BaseInfo baseInfo = 1;

	string userName = 2;
	string userDisplayName = 3;
	PredictionInfo info = 4;
}

message PredictionLockMessage {
	BaseInfo baseInfo = 1;

	string userName = 2;
	string userDisplayName = 3;
	PredictionInfo info = 4;
}

message PredictionEndMessage {
	BaseInfo baseInfo = 1;

	string userName = 2;
	string userDisplayName = 3;
	PredictionInfo info = 4;
	string winningOutcomeId = 5;
}


message StreamFirstUserJoinMessage {
	BaseInfo baseInfo = 1;

	string userName = 2;
}

message ChannelBanMessage {
	BaseInfo baseInfo = 1;

	string user_name = 2;
	string user_login = 3;
	string broadcaster_user_name = 4;
	string broadcaster_user_login = 5;
	string moderator_user_name = 6;
	string moderator_user_login = 7;
	string reason = 8;
	string ends_at = 9;
	bool is_permanent = 10;
}
