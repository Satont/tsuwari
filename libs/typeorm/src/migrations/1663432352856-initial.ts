import { MigrationInterface, QueryRunner } from "typeorm";

export class initial1663432352856 implements MigrationInterface {
    name = 'initial1663432352856'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TYPE "public"."bots_type_enum" AS ENUM('DEFAULT', 'CUSTOM')`);
        await queryRunner.query(`CREATE TABLE "bots" ("id" text NOT NULL, "type" "public"."bots_type_enum" NOT NULL, "tokenId" uuid, CONSTRAINT "UQ_df4240a5d71aa6a23b829d3cee8" UNIQUE ("tokenId"), CONSTRAINT "REL_df4240a5d71aa6a23b829d3cee" UNIQUE ("tokenId"), CONSTRAINT "bots_pkey" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_df4240a5d71aa6a23b829d3cee" ON "bots" ("tokenId") `);
        await queryRunner.query(`CREATE TABLE "channels" ("id" text NOT NULL, "isEnabled" boolean NOT NULL DEFAULT true, "isTwitchBanned" boolean NOT NULL DEFAULT false, "isBanned" boolean NOT NULL DEFAULT false, "botId" text NOT NULL, CONSTRAINT "REL_bc603823f3f741359c2339389f" UNIQUE ("id"), CONSTRAINT "PK_bc603823f3f741359c2339389f9" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."channels_commands_cooldowntype_enum" AS ENUM('GLOBAL', 'PER_USER')`);
        await queryRunner.query(`CREATE TYPE "public"."channels_commands_permission_enum" AS ENUM('BROADCASTER', 'MODERATOR', 'SUBSCRIBER', 'VIP', 'VIEWER', 'FOLLOWER')`);
        await queryRunner.query(`CREATE TYPE "public"."channels_commands_module_enum" AS ENUM('CUSTOM', 'DOTA', 'CHANNEL', 'MODERATION')`);
        await queryRunner.query(`CREATE TABLE "channels_commands" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" text NOT NULL, "cooldown" integer DEFAULT '0', "cooldownType" "public"."channels_commands_cooldowntype_enum" NOT NULL DEFAULT 'GLOBAL', "enabled" boolean NOT NULL DEFAULT true, "aliases" jsonb, "description" text, "visible" boolean NOT NULL DEFAULT true, "permission" "public"."channels_commands_permission_enum" NOT NULL, "default" boolean NOT NULL DEFAULT false, "defaultName" text, "module" "public"."channels_commands_module_enum" NOT NULL DEFAULT 'CUSTOM', "channelId" text NOT NULL, CONSTRAINT "PK_6f530d7cee75abfb1ef1cc7e09b" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_c340949fe9c2e1b1c636ff5ada" ON "channels_commands" ("name") `);
        await queryRunner.query(`CREATE INDEX "IDX_2ba87fd85e8e74847025745222" ON "channels_commands" ("channelId") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "channels_commands_name_channelId_key" ON "channels_commands" ("channelId", "name") `);
        await queryRunner.query(`CREATE TYPE "public"."channels_customvars_type_enum" AS ENUM('SCRIPT', 'TEXT')`);
        await queryRunner.query(`CREATE TABLE "channels_customvars" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" text NOT NULL, "description" text, "type" "public"."channels_customvars_type_enum" NOT NULL, "evalValue" text, "response" text, "channelId" text NOT NULL, CONSTRAINT "PK_a6d0167a26c310ef7832c66b55d" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "channels_dota_accounts" ("id" text NOT NULL, "channelId" text NOT NULL, CONSTRAINT "PK_f325fe7c08cb3c3c6ccaaa509fa" PRIMARY KEY ("id", "channelId"))`);
        await queryRunner.query(`CREATE UNIQUE INDEX "channels_dota_accounts_id_channelId_key" ON "channels_dota_accounts" ("channelId", "id") `);
        await queryRunner.query(`CREATE TABLE "channels_greetings" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "userId" text NOT NULL, "enabled" boolean NOT NULL DEFAULT true, "text" text NOT NULL, "channelId" text NOT NULL, CONSTRAINT "PK_90ee111c7fefdaaff4918cab6df" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "channels_integrations" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "enabled" boolean NOT NULL DEFAULT false, "accessToken" text, "refreshToken" text, "clientId" text, "clientSecret" text, "apiKey" text, "data" jsonb, "channelId" text NOT NULL, "integrationId" text NOT NULL, CONSTRAINT "PK_d5f8b2ee43dbd8f5a68d1ce71ca" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "channels_keywords" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "text" text NOT NULL, "response" text NOT NULL, "enabled" boolean NOT NULL DEFAULT true, "cooldown" integer DEFAULT '0', "channelId" text NOT NULL, CONSTRAINT "PK_6cb4cb2b8a95cc2728d1feab106" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE UNIQUE INDEX "channels_keywords_channelId_text_key" ON "channels_keywords" ("channelId", "text") `);
        await queryRunner.query(`CREATE TYPE "public"."channels_moderation_settings_type_enum" AS ENUM('links', 'blacklists', 'symbols', 'longMessage', 'caps', 'emotes')`);
        await queryRunner.query(`CREATE TABLE "channels_moderation_settings" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "type" "public"."channels_moderation_settings_type_enum" NOT NULL, "enabled" boolean NOT NULL DEFAULT false, "subscribers" boolean NOT NULL DEFAULT false, "vips" boolean NOT NULL DEFAULT false, "banTime" integer NOT NULL DEFAULT '600', "banMessage" text, "warningMessage" text, "checkClips" boolean DEFAULT false, "triggerLength" integer DEFAULT '300', "maxPercentage" integer DEFAULT '50', "blackListSentences" jsonb DEFAULT '[]', "channelId" text NOT NULL, CONSTRAINT "PK_fc3b021f2a7a5fde68b58543d93" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE UNIQUE INDEX "channels_moderation_settings_channelId_type_key" ON "channels_moderation_settings" ("channelId", "type") `);
        await queryRunner.query(`CREATE TABLE "channels_permits" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "channelId" text NOT NULL, "userId" text NOT NULL, CONSTRAINT "PK_1e24b77c350a387af97801f64ae" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "channels_timers" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" character varying(255) NOT NULL, "enabled" boolean NOT NULL DEFAULT false, "responses" jsonb NOT NULL DEFAULT '[]', "last" integer NOT NULL DEFAULT '0', "timeInterval" integer NOT NULL DEFAULT '0', "messageInterval" integer NOT NULL DEFAULT '0', "lastTriggerMessageNumber" integer NOT NULL DEFAULT '0', "channelId" text NOT NULL, CONSTRAINT "PK_858789b56e6e0956593768f9e05" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "channels_commands_responses" ("id" text NOT NULL DEFAULT gen_random_uuid(), "text" text, "commandId" uuid NOT NULL, CONSTRAINT "PK_2261731bc8ffc102ccc0082377b" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "channels_commands_usages" ("id" text NOT NULL DEFAULT gen_random_uuid(), "channelId" text NOT NULL, "commandId" uuid NOT NULL, "userId" text NOT NULL, CONSTRAINT "PK_e7549bc5ec5f2f2d779102caa8a" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "channels_dashboard_access" ("id" text NOT NULL DEFAULT gen_random_uuid(), "channelId" text NOT NULL, "userId" text NOT NULL, CONSTRAINT "PK_33f482fb4aec2bed59de1d52cec" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "dota_game_modes" ("id" integer NOT NULL, "name" text NOT NULL, CONSTRAINT "PK_d4eb4f935e0316f80207af11f49" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "dota_heroes" ("id" integer NOT NULL, "name" text NOT NULL, CONSTRAINT "PK_8f920265eebb91aa3ae6b0cb6e2" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_82490264788f0b786e2ff312a5" ON "dota_heroes" ("name") `);
        await queryRunner.query(`CREATE TABLE "dota_matches" ("id" text NOT NULL DEFAULT gen_random_uuid(), "startedAt" TIMESTAMP NOT NULL, "lobby_type" integer NOT NULL, "players" integer array, "players_heroes" integer array, "weekend_tourney_bracket_round" text, "weekend_tourney_skill_level" text, "match_id" text NOT NULL, "avarage_mmr" integer NOT NULL, "lobbyId" text NOT NULL, "finished" boolean NOT NULL DEFAULT false, "gameModeId" integer NOT NULL, CONSTRAINT "UQ_27d39ee5a1cdb04ed78a52286a1" UNIQUE ("match_id"), CONSTRAINT "PK_279584095dc95716f433cc184f3" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_27d39ee5a1cdb04ed78a52286a" ON "dota_matches" ("match_id") `);
        await queryRunner.query(`CREATE TABLE "dota_matches_cards" ("id" text NOT NULL DEFAULT gen_random_uuid(), "account_id" text NOT NULL, "rank_tier" integer, "leaderboard_rank" integer, "match_id" text NOT NULL, CONSTRAINT "PK_49fc741bc298a5e8402480bb0c9" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE UNIQUE INDEX "dota_matches_cards_match_id_account_id_key" ON "dota_matches_cards" ("account_id", "match_id") `);
        await queryRunner.query(`CREATE TABLE "dota_matches_results" ("id" text NOT NULL DEFAULT gen_random_uuid(), "players" jsonb NOT NULL, "radiant_win" boolean NOT NULL, "game_mode" integer NOT NULL, "match_id" text NOT NULL, CONSTRAINT "REL_66717d38c93b88a283ad77736a" UNIQUE ("match_id"), CONSTRAINT "PK_2c4f099e78034e57cef9a42b9fc" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE UNIQUE INDEX "dota_matches_results_match_id_key" ON "dota_matches_results" ("match_id") `);
        await queryRunner.query(`CREATE TYPE "public"."integrations_service_enum" AS ENUM('LASTFM', 'VK', 'FACEIT', 'SPOTIFY', 'DONATIONALERTS')`);
        await queryRunner.query(`CREATE TABLE "integrations" ("id" text NOT NULL DEFAULT gen_random_uuid(), "service" "public"."integrations_service_enum" NOT NULL, "accessToken" text, "refreshToken" text, "clientId" text, "clientSecret" text, "apiKey" text, "redirectUrl" text, CONSTRAINT "PK_9adcdc6d6f3922535361ce641e8" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "notifications" ("id" text NOT NULL DEFAULT gen_random_uuid(), "imageSrc" text, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "userId" text, CONSTRAINT "PK_6a72c3c0f683f6462415e653c3a" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."notifications_messages_langcode_enum" AS ENUM('RU', 'GB')`);
        await queryRunner.query(`CREATE TABLE "notifications_messages" ("id" text NOT NULL DEFAULT gen_random_uuid(), "text" text NOT NULL, "title" text, "langCode" "public"."notifications_messages_langcode_enum" NOT NULL, "notificationId" text NOT NULL, CONSTRAINT "PK_10975a05eccf9793aa12dc143fa" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "tokens" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "accessToken" text NOT NULL, "refreshToken" text NOT NULL, "expiresIn" integer NOT NULL, "obtainmentTimestamp" TIMESTAMP NOT NULL, CONSTRAINT "PK_3001e89ada36263dabf1fb6210a" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "users" ("id" text NOT NULL, "isTester" boolean NOT NULL DEFAULT false, "isBotAdmin" boolean NOT NULL DEFAULT false, "tokenId" uuid, CONSTRAINT "REL_d98a275f8bc6cd986fcbe2eab0" UNIQUE ("tokenId"), CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_d98a275f8bc6cd986fcbe2eab0" ON "users" ("tokenId") `);
        await queryRunner.query(`CREATE TABLE "users_files" ("id" text NOT NULL DEFAULT gen_random_uuid(), "name" text NOT NULL, "size" integer NOT NULL, "type" text NOT NULL, "userId" text NOT NULL, CONSTRAINT "PK_b01e2cd05bbd1ec1fddbd396ce3" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "users_stats" ("id" text NOT NULL DEFAULT gen_random_uuid(), "messages" integer NOT NULL DEFAULT '0', "watched" bigint NOT NULL DEFAULT '0', "channelId" text NOT NULL, "userId" text NOT NULL, CONSTRAINT "PK_44924448d5896c2364a4c6ddf75" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE UNIQUE INDEX "users_stats_userId_channelId_key" ON "users_stats" ("channelId", "userId") `);
        await queryRunner.query(`CREATE TABLE "users_viewed_notifications" ("id" text NOT NULL DEFAULT gen_random_uuid(), "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "notificationId" text NOT NULL, "userId" text NOT NULL, CONSTRAINT "PK_8d45e86409cb2d99203c7b704bf" PRIMARY KEY ("id"))`);
        await queryRunner.query(`ALTER TABLE "bots" ADD CONSTRAINT "bots_tokenId_key" FOREIGN KEY ("tokenId") REFERENCES "tokens"("id") ON DELETE SET NULL ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "channels" ADD CONSTRAINT "FK_4f890144c0cb55fe7867b8f61e6" FOREIGN KEY ("botId") REFERENCES "bots"("id") ON DELETE RESTRICT ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "channels" ADD CONSTRAINT "FK_bc603823f3f741359c2339389f9" FOREIGN KEY ("id") REFERENCES "users"("id") ON DELETE RESTRICT ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "channels_commands" ADD CONSTRAINT "FK_2ba87fd85e8e748470257452227" FOREIGN KEY ("channelId") REFERENCES "channels"("id") ON DELETE RESTRICT ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "channels_customvars" ADD CONSTRAINT "FK_2bf1744a6cd76e4457eddfd3bc4" FOREIGN KEY ("channelId") REFERENCES "channels"("id") ON DELETE RESTRICT ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "channels_dota_accounts" ADD CONSTRAINT "FK_a4a2cd666dac0cae74549a5de72" FOREIGN KEY ("channelId") REFERENCES "channels"("id") ON DELETE RESTRICT ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "channels_greetings" ADD CONSTRAINT "FK_15402461d2eb224e2e088b35606" FOREIGN KEY ("channelId") REFERENCES "channels"("id") ON DELETE RESTRICT ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "channels_integrations" ADD CONSTRAINT "FK_c17a48a983ac20ff800f553630a" FOREIGN KEY ("channelId") REFERENCES "channels"("id") ON DELETE RESTRICT ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "channels_integrations" ADD CONSTRAINT "FK_4958a98d1c19453c5755a422906" FOREIGN KEY ("integrationId") REFERENCES "integrations"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "channels_keywords" ADD CONSTRAINT "FK_d17ea8fc949494c6b9681d5350c" FOREIGN KEY ("channelId") REFERENCES "channels"("id") ON DELETE RESTRICT ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "channels_moderation_settings" ADD CONSTRAINT "FK_b34073350d4aa307b6104380e9b" FOREIGN KEY ("channelId") REFERENCES "channels"("id") ON DELETE RESTRICT ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "channels_permits" ADD CONSTRAINT "FK_b7e83e12e0482fa968de97b6b06" FOREIGN KEY ("channelId") REFERENCES "channels"("id") ON DELETE RESTRICT ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "channels_permits" ADD CONSTRAINT "FK_6bb136710060aa1be1744bc3bc9" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE RESTRICT ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "channels_timers" ADD CONSTRAINT "FK_50978b1848b99458d6ceb6b1989" FOREIGN KEY ("channelId") REFERENCES "channels"("id") ON DELETE RESTRICT ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "channels_commands_responses" ADD CONSTRAINT "FK_b18b2e298e41de0397acea55b97" FOREIGN KEY ("commandId") REFERENCES "channels_commands"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "channels_commands_usages" ADD CONSTRAINT "FK_2db68a1b263bea3f214186bb24c" FOREIGN KEY ("commandId") REFERENCES "channels_commands"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "channels_commands_usages" ADD CONSTRAINT "FK_14be9e16eaece94af10d56044e0" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE RESTRICT ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "channels_dashboard_access" ADD CONSTRAINT "FK_82931b7f57c891fd7da375f3892" FOREIGN KEY ("channelId") REFERENCES "channels"("id") ON DELETE RESTRICT ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "channels_dashboard_access" ADD CONSTRAINT "FK_0ad4bccf63566cd4792dfe9f191" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE RESTRICT ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "dota_matches" ADD CONSTRAINT "FK_7fa32afcc462ae6f50b176f6c9c" FOREIGN KEY ("gameModeId") REFERENCES "dota_game_modes"("id") ON DELETE RESTRICT ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "dota_matches_cards" ADD CONSTRAINT "FK_a9d58830e97acdda53124a0431f" FOREIGN KEY ("match_id") REFERENCES "dota_matches"("id") ON DELETE RESTRICT ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "dota_matches_results" ADD CONSTRAINT "FK_66717d38c93b88a283ad77736ad" FOREIGN KEY ("match_id") REFERENCES "dota_matches"("match_id") ON DELETE RESTRICT ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "notifications" ADD CONSTRAINT "FK_692a909ee0fa9383e7859f9b406" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE SET NULL ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "notifications_messages" ADD CONSTRAINT "FK_4bfdb54ebcde220bcbcf696d862" FOREIGN KEY ("notificationId") REFERENCES "notifications"("id") ON DELETE RESTRICT ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "users" ADD CONSTRAINT "FK_d98a275f8bc6cd986fcbe2eab01" FOREIGN KEY ("tokenId") REFERENCES "tokens"("id") ON DELETE SET NULL ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "users_files" ADD CONSTRAINT "FK_74cae0ea1fbb3df84c488ec0383" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE SET NULL ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "users_stats" ADD CONSTRAINT "FK_d55aab4a64c0c6b4b374b1da258" FOREIGN KEY ("channelId") REFERENCES "channels"("id") ON DELETE RESTRICT ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "users_stats" ADD CONSTRAINT "FK_3d6cc217af2451426c44a30e678" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE RESTRICT ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "users_viewed_notifications" ADD CONSTRAINT "FK_f5d19d90314d14d636752e2888b" FOREIGN KEY ("notificationId") REFERENCES "notifications"("id") ON DELETE RESTRICT ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "users_viewed_notifications" ADD CONSTRAINT "FK_8d7e1a04a0d2d9868192561952d" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE RESTRICT ON UPDATE CASCADE`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "users_viewed_notifications" DROP CONSTRAINT "FK_8d7e1a04a0d2d9868192561952d"`);
        await queryRunner.query(`ALTER TABLE "users_viewed_notifications" DROP CONSTRAINT "FK_f5d19d90314d14d636752e2888b"`);
        await queryRunner.query(`ALTER TABLE "users_stats" DROP CONSTRAINT "FK_3d6cc217af2451426c44a30e678"`);
        await queryRunner.query(`ALTER TABLE "users_stats" DROP CONSTRAINT "FK_d55aab4a64c0c6b4b374b1da258"`);
        await queryRunner.query(`ALTER TABLE "users_files" DROP CONSTRAINT "FK_74cae0ea1fbb3df84c488ec0383"`);
        await queryRunner.query(`ALTER TABLE "users" DROP CONSTRAINT "FK_d98a275f8bc6cd986fcbe2eab01"`);
        await queryRunner.query(`ALTER TABLE "notifications_messages" DROP CONSTRAINT "FK_4bfdb54ebcde220bcbcf696d862"`);
        await queryRunner.query(`ALTER TABLE "notifications" DROP CONSTRAINT "FK_692a909ee0fa9383e7859f9b406"`);
        await queryRunner.query(`ALTER TABLE "dota_matches_results" DROP CONSTRAINT "FK_66717d38c93b88a283ad77736ad"`);
        await queryRunner.query(`ALTER TABLE "dota_matches_cards" DROP CONSTRAINT "FK_a9d58830e97acdda53124a0431f"`);
        await queryRunner.query(`ALTER TABLE "dota_matches" DROP CONSTRAINT "FK_7fa32afcc462ae6f50b176f6c9c"`);
        await queryRunner.query(`ALTER TABLE "channels_dashboard_access" DROP CONSTRAINT "FK_0ad4bccf63566cd4792dfe9f191"`);
        await queryRunner.query(`ALTER TABLE "channels_dashboard_access" DROP CONSTRAINT "FK_82931b7f57c891fd7da375f3892"`);
        await queryRunner.query(`ALTER TABLE "channels_commands_usages" DROP CONSTRAINT "FK_14be9e16eaece94af10d56044e0"`);
        await queryRunner.query(`ALTER TABLE "channels_commands_usages" DROP CONSTRAINT "FK_2db68a1b263bea3f214186bb24c"`);
        await queryRunner.query(`ALTER TABLE "channels_commands_responses" DROP CONSTRAINT "FK_b18b2e298e41de0397acea55b97"`);
        await queryRunner.query(`ALTER TABLE "channels_timers" DROP CONSTRAINT "FK_50978b1848b99458d6ceb6b1989"`);
        await queryRunner.query(`ALTER TABLE "channels_permits" DROP CONSTRAINT "FK_6bb136710060aa1be1744bc3bc9"`);
        await queryRunner.query(`ALTER TABLE "channels_permits" DROP CONSTRAINT "FK_b7e83e12e0482fa968de97b6b06"`);
        await queryRunner.query(`ALTER TABLE "channels_moderation_settings" DROP CONSTRAINT "FK_b34073350d4aa307b6104380e9b"`);
        await queryRunner.query(`ALTER TABLE "channels_keywords" DROP CONSTRAINT "FK_d17ea8fc949494c6b9681d5350c"`);
        await queryRunner.query(`ALTER TABLE "channels_integrations" DROP CONSTRAINT "FK_4958a98d1c19453c5755a422906"`);
        await queryRunner.query(`ALTER TABLE "channels_integrations" DROP CONSTRAINT "FK_c17a48a983ac20ff800f553630a"`);
        await queryRunner.query(`ALTER TABLE "channels_greetings" DROP CONSTRAINT "FK_15402461d2eb224e2e088b35606"`);
        await queryRunner.query(`ALTER TABLE "channels_dota_accounts" DROP CONSTRAINT "FK_a4a2cd666dac0cae74549a5de72"`);
        await queryRunner.query(`ALTER TABLE "channels_customvars" DROP CONSTRAINT "FK_2bf1744a6cd76e4457eddfd3bc4"`);
        await queryRunner.query(`ALTER TABLE "channels_commands" DROP CONSTRAINT "FK_2ba87fd85e8e748470257452227"`);
        await queryRunner.query(`ALTER TABLE "channels" DROP CONSTRAINT "FK_bc603823f3f741359c2339389f9"`);
        await queryRunner.query(`ALTER TABLE "channels" DROP CONSTRAINT "FK_4f890144c0cb55fe7867b8f61e6"`);
        await queryRunner.query(`ALTER TABLE "bots" DROP CONSTRAINT "bots_tokenId_key"`);
        await queryRunner.query(`DROP TABLE "users_viewed_notifications"`);
        await queryRunner.query(`DROP INDEX "public"."users_stats_userId_channelId_key"`);
        await queryRunner.query(`DROP TABLE "users_stats"`);
        await queryRunner.query(`DROP TABLE "users_files"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_d98a275f8bc6cd986fcbe2eab0"`);
        await queryRunner.query(`DROP TABLE "users"`);
        await queryRunner.query(`DROP TABLE "tokens"`);
        await queryRunner.query(`DROP TABLE "notifications_messages"`);
        await queryRunner.query(`DROP TYPE "public"."notifications_messages_langcode_enum"`);
        await queryRunner.query(`DROP TABLE "notifications"`);
        await queryRunner.query(`DROP TABLE "integrations"`);
        await queryRunner.query(`DROP TYPE "public"."integrations_service_enum"`);
        await queryRunner.query(`DROP INDEX "public"."dota_matches_results_match_id_key"`);
        await queryRunner.query(`DROP TABLE "dota_matches_results"`);
        await queryRunner.query(`DROP INDEX "public"."dota_matches_cards_match_id_account_id_key"`);
        await queryRunner.query(`DROP TABLE "dota_matches_cards"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_27d39ee5a1cdb04ed78a52286a"`);
        await queryRunner.query(`DROP TABLE "dota_matches"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_82490264788f0b786e2ff312a5"`);
        await queryRunner.query(`DROP TABLE "dota_heroes"`);
        await queryRunner.query(`DROP TABLE "dota_game_modes"`);
        await queryRunner.query(`DROP TABLE "channels_dashboard_access"`);
        await queryRunner.query(`DROP TABLE "channels_commands_usages"`);
        await queryRunner.query(`DROP TABLE "channels_commands_responses"`);
        await queryRunner.query(`DROP TABLE "channels_timers"`);
        await queryRunner.query(`DROP TABLE "channels_permits"`);
        await queryRunner.query(`DROP INDEX "public"."channels_moderation_settings_channelId_type_key"`);
        await queryRunner.query(`DROP TABLE "channels_moderation_settings"`);
        await queryRunner.query(`DROP TYPE "public"."channels_moderation_settings_type_enum"`);
        await queryRunner.query(`DROP INDEX "public"."channels_keywords_channelId_text_key"`);
        await queryRunner.query(`DROP TABLE "channels_keywords"`);
        await queryRunner.query(`DROP TABLE "channels_integrations"`);
        await queryRunner.query(`DROP TABLE "channels_greetings"`);
        await queryRunner.query(`DROP INDEX "public"."channels_dota_accounts_id_channelId_key"`);
        await queryRunner.query(`DROP TABLE "channels_dota_accounts"`);
        await queryRunner.query(`DROP TABLE "channels_customvars"`);
        await queryRunner.query(`DROP TYPE "public"."channels_customvars_type_enum"`);
        await queryRunner.query(`DROP INDEX "public"."channels_commands_name_channelId_key"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_2ba87fd85e8e74847025745222"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_c340949fe9c2e1b1c636ff5ada"`);
        await queryRunner.query(`DROP TABLE "channels_commands"`);
        await queryRunner.query(`DROP TYPE "public"."channels_commands_module_enum"`);
        await queryRunner.query(`DROP TYPE "public"."channels_commands_permission_enum"`);
        await queryRunner.query(`DROP TYPE "public"."channels_commands_cooldowntype_enum"`);
        await queryRunner.query(`DROP TABLE "channels"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_df4240a5d71aa6a23b829d3cee"`);
        await queryRunner.query(`DROP TABLE "bots"`);
        await queryRunner.query(`DROP TYPE "public"."bots_type_enum"`);
    }

}
