FROM ubuntu:latest AS build_base

RUN mkdir -p /app
WORKDIR /app

RUN apt-get update \ 
    && apt-get install -y openssl -y curl git protobuf-compiler wget apt-transport-https ca-certificates gnupg

RUN curl -sLf --retry 3 --tlsv1.2 --proto "=https" 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key' | apt-key add - && \
  echo "deb https://packages.doppler.com/public/cli/deb/debian any-version main" | tee /etc/apt/sources.list.d/doppler-cli.list

RUN apt-get update && apt-get install -y doppler
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
RUN apt-get install nodejs

RUN wget https://go.dev/dl/go1.19.1.linux-amd64.tar.gz && rm -rf /usr/local/go && tar -C /usr/local -xzf go1.19.1.linux-amd64.tar.gz && rm go1.19.1.linux-amd64.tar.gz

ENV GOPATH=$HOME/go
ENV PATH=$PATH:$GOPATH/bin:/usr/local/go/bin

RUN go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28

RUN npm i -g pnpm@7 pm2

# COPY package.json pnpm-workspace.yaml pnpm-lock.yaml .npmrc /app/
# COPY apps/api/package.json /app/apps/api/
# COPY apps/bots/package.json /app/apps/bots/
# COPY apps/dota/package.json /app/apps/dota/
# COPY apps/eval/package.json /app/apps/eval/
# COPY apps/eventsub/package.json /app/apps/eventsub/
# COPY apps/frontend/package.json /app/apps/frontend/
# COPY apps/scheduler/package.json /app/apps/scheduler/
# COPY apps/streamstatus/package.json /app/apps/streamstatus/

# COPY libs/config/package.json /app/libs/config/
# COPY libs/integrations/spotify/package.json /app/libs/integrations/spotify/
# COPY libs/nats/package.json /app/libs/nats/
# COPY libs/redis/package.json /app/libs/redis/
# COPY libs/shared/package.json /app/libs/shared/
# COPY libs/typeorm/package.json /app/libs/typeorm/

# RUN CI=false pnpm install

# COPY . .

# RUN cd /app/apps/parser && go mod download

# RUN pnpm build:backend

EXPOSE 3005

COPY start.dev.sh /
RUN chmod +x /start.dev.sh

RUN chmod 777 -R /go
RUN mkdir /.doppler
RUN chmod 777 -R /.doppler
RUN mkdir /.pm2
RUN chmod 777 -R /.pm2
RUN mkdir /.cache
RUN chmod 777 -R /.cache

ENTRYPOINT ["/start.dev.sh"]